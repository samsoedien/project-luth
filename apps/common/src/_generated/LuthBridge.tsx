/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/Bridge_Collection.glb --types --transform --instanceall --keepmeshes --keepmaterials --keepattributes --keepnames --draco --meta --shadows --exportdefault --output ./src/_generated/LuthBridge.tsx 
Files: ./public/Bridge_Collection.glb [551.06KB] > /Users/samsoedien/Documents/Repositories/project-luth/apps/common/src/_generated/Bridge_Collection-transformed.glb [76.06KB] (86%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, Merged } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

export type GLTFResult = GLTF & {
  nodes: {
    Body_Saddle: THREE.Mesh
    Body_Bridge_Pin_Inlay: THREE.Mesh
    Body_Bridge_Pin004: THREE.Mesh
    Body_Bridge_Pin_Inlay005: THREE.Mesh
    Body_Bridge_Pin005: THREE.Mesh
    Body_Bridge: THREE.Mesh
    Body_Bridge_Pin: THREE.Mesh
    Body_Bridge_Pin_Inlay001: THREE.Mesh
    Body_Bridge_Pin001: THREE.Mesh
    Body_Bridge_Pin_Inlay002: THREE.Mesh
    Body_Bridge_Pin002: THREE.Mesh
    Body_Bridge_Pin_Inlay003: THREE.Mesh
    Body_Bridge_Pin003: THREE.Mesh
    Body_Bridge_Pin_Inlay004: THREE.Mesh
  }
  materials: {
    F_507e3e0160e04eb79140b06e88177568: THREE.MeshPhysicalMaterial
    F_b5547321fea74416bdf89821e9d268f5: THREE.MeshPhysicalMaterial
    F_6f181d953c6a41ee8301b0ec187bfa29: THREE.MeshPhysicalMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

const context = React.createContext({} as ContextType)

export function Instances({ children, ...props }: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/Bridge_Collection-transformed.glb') as GLTFResult
  const instances = React.useMemo(
    () => ({
      BodySaddle: nodes.Body_Saddle,
      BodyBridgePinInlay: nodes.Body_Bridge_Pin_Inlay,
      BodyBridgePin: nodes.Body_Bridge_Pin004,
      BodyBridgePinInlay1: nodes.Body_Bridge_Pin_Inlay005,
      BodyBridgePin1: nodes.Body_Bridge_Pin005,
      BodyBridge: nodes.Body_Bridge,
      BodyBridgePin2: nodes.Body_Bridge_Pin,
      BodyBridgePinInlay2: nodes.Body_Bridge_Pin_Inlay001,
      BodyBridgePin3: nodes.Body_Bridge_Pin001,
      BodyBridgePinInlay3: nodes.Body_Bridge_Pin_Inlay002,
      BodyBridgePin4: nodes.Body_Bridge_Pin002,
      BodyBridgePinInlay4: nodes.Body_Bridge_Pin_Inlay003,
      BodyBridgePin5: nodes.Body_Bridge_Pin003,
      BodyBridgePinInlay5: nodes.Body_Bridge_Pin_Inlay004,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances: ContextType) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const instances = React.useContext(context)
  return (
    <group {...props} dispose={null}>
      <instances.BodySaddle name="Body_Saddle" userData={{ name: 'Body_Saddle' }} />
      <instances.BodyBridgePinInlay name="Body_Bridge_Pin_Inlay" userData={{ name: 'Body_Bridge_Pin_Inlay' }} />
      <instances.BodyBridgePin name="Body_Bridge_Pin004" userData={{ name: 'Body_Bridge_Pin.004' }} />
      <instances.BodyBridgePinInlay1 name="Body_Bridge_Pin_Inlay005" userData={{ name: 'Body_Bridge_Pin_Inlay.005' }} />
      <instances.BodyBridgePin1 name="Body_Bridge_Pin005" userData={{ name: 'Body_Bridge_Pin.005' }} />
      <instances.BodyBridge name="Body_Bridge" userData={{ name: 'Body_Bridge' }} />
      <instances.BodyBridgePin2 name="Body_Bridge_Pin" userData={{ name: 'Body_Bridge_Pin' }} />
      <instances.BodyBridgePinInlay2 name="Body_Bridge_Pin_Inlay001" userData={{ name: 'Body_Bridge_Pin_Inlay.001' }} />
      <instances.BodyBridgePin3 name="Body_Bridge_Pin001" userData={{ name: 'Body_Bridge_Pin.001' }} />
      <instances.BodyBridgePinInlay3 name="Body_Bridge_Pin_Inlay002" userData={{ name: 'Body_Bridge_Pin_Inlay.002' }} />
      <instances.BodyBridgePin4 name="Body_Bridge_Pin002" userData={{ name: 'Body_Bridge_Pin.002' }} />
      <instances.BodyBridgePinInlay4 name="Body_Bridge_Pin_Inlay003" userData={{ name: 'Body_Bridge_Pin_Inlay.003' }} />
      <instances.BodyBridgePin5 name="Body_Bridge_Pin003" userData={{ name: 'Body_Bridge_Pin.003' }} />
      <instances.BodyBridgePinInlay5 name="Body_Bridge_Pin_Inlay004" userData={{ name: 'Body_Bridge_Pin_Inlay.004' }} />
    </group>
  )
}

useGLTF.preload('/Bridge_Collection-transformed.glb')
