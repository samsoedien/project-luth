/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 ./public/sides.glb --types --transform --keepnames --keepmeshes --draco --meta --shadows --exportdefault --output ./src/_generated/Sides.tsx 
Files: ./public/sides.glb [201.64KB] > /Users/samsoedien/Documents/Repositories/project-luth/apps/common/src/_generated/sides-transformed.glb [66.6KB] (67%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    sides: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/sides-transformed.glb') as GLTFResult

  const Wood0244BaseColor = useTexture('sitka-spruce.jpg')

  return (
    <group {...props} dispose={null} scale={0.002}>
      <mesh
        name="sides"
        castShadow
        receiveShadow
        geometry={nodes.sides.geometry}
        material={materials['Material.001']}
        userData={{ name: 'sides' }}
      >
        <meshStandardMaterial map={Wood0244BaseColor} wireframe />
      </mesh>
    </group>
  )
}

useGLTF.preload('/sides-transformed.glb')
