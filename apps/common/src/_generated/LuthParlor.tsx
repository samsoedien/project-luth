/*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@7.1.3 ./public/Parlor_Collection.glb --transform --types --keepnames --keepmeshes --draco --meta --shadows --exportdefault --instanceall --output ./src/_generated/LuthParlor.tsx 
*/

import {
  useAnimations,
  useGLTF,
  Merged,
  PerspectiveCamera,
  OrthographicCamera,
} from '@react-three/drei'
import { GroupProps, MeshProps, useGraph } from '@react-three/fiber'
import * as React from 'react'
import { AnimationClip, Material, Mesh, MeshPhysicalMaterial, MeshStandardMaterial } from 'three'
import { GLTF, SkeletonUtils } from 'three-stdlib'

interface LuthParlorGLTF extends GLTF {
  materials: { FiestaRed: MeshStandardMaterial }
  nodes: {
    Body_Heel_Block004: Mesh
    Body_Heel_Block005: Mesh
    Body_Tail_Block004: Mesh
    Body_Tail_Block005: Mesh
    Body_End_Graft_Wedge001: Mesh
    Body_Sides001: Mesh
    Body_Lining_Top001: Mesh
    Body_Soundboard001: Mesh
    Body_Lining_Bottom001: Mesh
    Body_Soundboard_Arm_Bevel001: Mesh
    Body_Soundboard_Venetian_Cutaway001: Mesh
    Body_Sides_Arm_Bevel_Scalloped_Cutaway001: Mesh
    Body_Soundboard_Florentine_Cutaway001: Mesh
    Body_Soundboard_Arm_Bevel_Cutaway_Florentine001: Mesh
    Body_Soundboard_Arm_Bevel_Cutaway_Venetian001: Mesh
  }
}

export interface LuthParlorProps extends GroupProps {}

const modelLoadPath = 'Parlor_Collection.glb'
const draco = true

type ContextType = Record<string, React.ForwardRefExoticComponent<MeshProps>>

export const context = React.createContext<ContextType>({})

export function LuthParlorInstances({ children, ...props }: LuthParlorProps) {
  const { nodes } = useGLTF(modelLoadPath, draco) as LuthParlorGLTF
  const instances = React.useMemo(
    () => ({
      Body_Heel_Block: nodes.Body_Heel_Block004,
      Body_Tail_Block: nodes.Body_Tail_Block004,
      Body_End_Graft_Wedge: nodes.Body_End_Graft_Wedge001,
      Body_Sides: nodes.Body_Sides001,
      Body_Lining_Top: nodes.Body_Lining_Top001,
      Body_Soundboard: nodes.Body_Soundboard001,
      Body_Lining_Bottom: nodes.Body_Lining_Bottom001,
      Body_Soundboard_Arm_Bevel: nodes.Body_Soundboard_Arm_Bevel001,
      Body_Soundboard_Venetian_Cutaway: nodes.Body_Soundboard_Venetian_Cutaway001,
      Body_Sides_Arm_Bevel_Scalloped_Cutaway: nodes.Body_Sides_Arm_Bevel_Scalloped_Cutaway001,
      Body_Soundboard_Florentine_Cutaway: nodes.Body_Soundboard_Florentine_Cutaway001,
      Body_Soundboard_Arm_Bevel_Cutaway_Florentine:
        nodes.Body_Soundboard_Arm_Bevel_Cutaway_Florentine001,
      Body_Soundboard_Arm_Bevel_Cutaway_Venetian:
        nodes.Body_Soundboard_Arm_Bevel_Cutaway_Venetian001,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances: ContextType) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export function LuthParlor(props: LuthParlorProps) {
  const instances = React.useContext(context)

  return (
    <group {...props} dispose={null}>
      <instances.Body_Heel_Block
        name="Body_Heel_Block004"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Heel_Block.004' }}
      />
      <instances.Body_Heel_Block
        name="Body_Heel_Block005"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Heel_Block.005' }}
      />
      <instances.Body_Tail_Block
        name="Body_Tail_Block004"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Tail_Block.004' }}
      />
      <instances.Body_Tail_Block
        name="Body_Tail_Block005"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Tail_Block.005' }}
      />
      <instances.Body_End_Graft_Wedge
        name="Body_End_Graft_Wedge001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_End_Graft_Wedge.001' }}
      />
      <instances.Body_Sides
        name="Body_Sides001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Sides.001' }}
      />
      <instances.Body_Lining_Top
        name="Body_Lining_Top001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Lining_Top.001' }}
      />
      <instances.Body_Soundboard
        name="Body_Soundboard001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard.001' }}
      />
      <instances.Body_Lining_Bottom
        name="Body_Lining_Bottom001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Lining_Bottom.001' }}
      />
      <instances.Body_Soundboard_Arm_Bevel
        name="Body_Soundboard_Arm_Bevel001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel.001' }}
      />
      <instances.Body_Soundboard_Venetian_Cutaway
        name="Body_Soundboard_Venetian_Cutaway001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Venetian_Cutaway.001' }}
      />
      <instances.Body_Sides_Arm_Bevel_Scalloped_Cutaway
        name="Body_Sides_Arm_Bevel_Scalloped_Cutaway001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Sides_Arm_Bevel_Scalloped_Cutaway.001' }}
      />
      <instances.Body_Soundboard_Florentine_Cutaway
        name="Body_Soundboard_Florentine_Cutaway001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Florentine_Cutaway.001' }}
      />
      <instances.Body_Soundboard_Arm_Bevel_Cutaway_Florentine
        name="Body_Soundboard_Arm_Bevel_Cutaway_Florentine001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel_Cutaway_Florentine.001' }}
      />
      <instances.Body_Soundboard_Arm_Bevel_Cutaway_Venetian
        name="Body_Soundboard_Arm_Bevel_Cutaway_Venetian001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel_Cutaway_Venetian.001' }}
      />
    </group>
  )
}

useGLTF.preload(modelLoadPath, draco)
