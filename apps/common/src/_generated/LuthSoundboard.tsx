/*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@7.1.3 ./public/Soundboard_Collection.glb --transform --types --keepnames --keepmeshes --draco --meta --shadows --exportdefault --instanceall --output ./src/_generated/LuthSoundboard.tsx 
*/

import {
  useAnimations,
  useGLTF,
  Merged,
  PerspectiveCamera,
  OrthographicCamera,
} from '@react-three/drei'
import { GroupProps, MeshProps, useGraph } from '@react-three/fiber'
import * as React from 'react'
import { AnimationClip, Material, Mesh, MeshPhysicalMaterial, MeshStandardMaterial } from 'three'
import { GLTF, SkeletonUtils } from 'three-stdlib'

interface LuthSoundboardGLTF extends GLTF {
  materials: { ['wood 1']: MeshStandardMaterial }
  nodes: {
    Body_Soundboard_Florentine_Cutaway: Mesh
    Body_Soundboard_Arm_Bevel: Mesh
    Body_Soundboard_Arm_Bevel_Cutaway_Florentine: Mesh
    Body_Soundboard: Mesh
    Body_Soundboard_Venetian_Cutaway: Mesh
    Body_Soundboard001: Mesh
    Body_Soundboard_Venetian_Cutaway001: Mesh
    Body_Soundboard_Arm_Bevel_Cutaway_Venetian: Mesh
    Body_Soundboard_Arm_Bevel_Cutaway_Florentine001: Mesh
    Body_Soundboard_Arm_Bevel001: Mesh
    Body_Soundboard_Arm_Bevel_Cutaway_Venetian001: Mesh
    Body_Soundboard_Florentine_Cutaway001: Mesh
  }
}

export interface LuthSoundboardProps extends GroupProps {}

const modelLoadPath = 'Soundboard_Collection.glb'
const draco = true

type ContextType = Record<string, React.ForwardRefExoticComponent<MeshProps>>

export const context = React.createContext<ContextType>({})

export function LuthSoundboardInstances({ children, ...props }: LuthSoundboardProps) {
  const { nodes } = useGLTF(modelLoadPath, draco) as LuthSoundboardGLTF
  const instances = React.useMemo(
    () => ({
      Body_Soundboard_Florentine_Cutaway: nodes.Body_Soundboard_Florentine_Cutaway,
      Body_Soundboard_Arm_Bevel: nodes.Body_Soundboard_Arm_Bevel,
      Body_Soundboard_Arm_Bevel_Cutaway_Florentine:
        nodes.Body_Soundboard_Arm_Bevel_Cutaway_Florentine,
      Body_Soundboard: nodes.Body_Soundboard,
      Body_Soundboard_Venetian_Cutaway: nodes.Body_Soundboard_Venetian_Cutaway,
      Body_Soundboard1: nodes.Body_Soundboard001,
      Body_Soundboard_Venetian_Cutaway1: nodes.Body_Soundboard_Venetian_Cutaway001,
      Body_Soundboard_Arm_Bevel_Cutaway_Venetian: nodes.Body_Soundboard_Arm_Bevel_Cutaway_Venetian,
      Body_Soundboard_Arm_Bevel_Cutaway_Florentine1:
        nodes.Body_Soundboard_Arm_Bevel_Cutaway_Florentine001,
      Body_Soundboard_Arm_Bevel1: nodes.Body_Soundboard_Arm_Bevel001,
      Body_Soundboard_Arm_Bevel_Cutaway_Venetian1:
        nodes.Body_Soundboard_Arm_Bevel_Cutaway_Venetian001,
      Body_Soundboard_Florentine_Cutaway1: nodes.Body_Soundboard_Florentine_Cutaway001,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances: ContextType) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export function LuthSoundboard(props: LuthSoundboardProps) {
  const instances = React.useContext(context)

  return (
    <group {...props} dispose={null}>
      <instances.Body_Soundboard_Florentine_Cutaway
        name="Body_Soundboard_Florentine_Cutaway"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Florentine_Cutaway' }}
      />
      <instances.Body_Soundboard_Arm_Bevel
        name="Body_Soundboard_Arm_Bevel"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel' }}
      />
      <instances.Body_Soundboard_Arm_Bevel_Cutaway_Florentine
        name="Body_Soundboard_Arm_Bevel_Cutaway_Florentine"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel_Cutaway_Florentine' }}
      />
      <instances.Body_Soundboard
        name="Body_Soundboard"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard' }}
      />
      <instances.Body_Soundboard_Venetian_Cutaway
        name="Body_Soundboard_Venetian_Cutaway"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Venetian_Cutaway' }}
      />
      <instances.Body_Soundboard1
        name="Body_Soundboard001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard.001' }}
      />
      <instances.Body_Soundboard_Venetian_Cutaway1
        name="Body_Soundboard_Venetian_Cutaway001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Venetian_Cutaway.001' }}
      />
      <instances.Body_Soundboard_Arm_Bevel_Cutaway_Venetian
        name="Body_Soundboard_Arm_Bevel_Cutaway_Venetian"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel_Cutaway_Venetian' }}
      />
      <instances.Body_Soundboard_Arm_Bevel_Cutaway_Florentine1
        name="Body_Soundboard_Arm_Bevel_Cutaway_Florentine001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel_Cutaway_Florentine.001' }}
      />
      <instances.Body_Soundboard_Arm_Bevel1
        name="Body_Soundboard_Arm_Bevel001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel.001' }}
      />
      <instances.Body_Soundboard_Arm_Bevel_Cutaway_Venetian1
        name="Body_Soundboard_Arm_Bevel_Cutaway_Venetian001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Arm_Bevel_Cutaway_Venetian.001' }}
      />
      <instances.Body_Soundboard_Florentine_Cutaway1
        name="Body_Soundboard_Florentine_Cutaway001"
        castShadow
        receiveShadow
        userData={{ name: 'Body_Soundboard_Florentine_Cutaway.001' }}
      />
    </group>
  )
}

useGLTF.preload(modelLoadPath, draco)
