/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/Sides_Collection.glb --types --transform --instanceall --keepmeshes --keepmaterials --keepattributes --keepnames --draco --meta --shadows --exportdefault --output ./src/_generated/LuthSides.tsx 
Files: ./public/Sides_Collection.glb [1.14MB] > /Users/samsoedien/Documents/Repositories/project-luth/apps/common/src/_generated/Sides_Collection-transformed.glb [103.72KB] (91%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, Merged } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

export type GLTFResult = GLTF & {
  nodes: {
    Body_Heel_Block: THREE.Mesh
    Body_Tail_Block: THREE.Mesh
    Body_Sides_Arm_Bevel_Florentine_Cutaway: THREE.Mesh
    Body_Sides_Arm_Bevel_Venetian_Cutaway: THREE.Mesh
    Body_Sides_Arm_Bevel_Scalloped_Cutaway: THREE.Mesh
    Body_Lining_Top: THREE.Mesh
    Body_Lining_Bottom: THREE.Mesh
    Body_End_Graft_Wedge: THREE.Mesh
    Body_Sides: THREE.Mesh
    Body_Sides_Venetian_Cutaway: THREE.Mesh
    Body_Sides_Florentine_Cutaway: THREE.Mesh
    Body_Sides_Scalloped_Cutaway: THREE.Mesh
    Body_Sides_Arm_Bevel: THREE.Mesh
    Body_Heel_Block001: THREE.Mesh
    Body_Tail_Block001: THREE.Mesh
    Body_Lining_Top001: THREE.Mesh
    Body_Lining_Bottom001: THREE.Mesh
    Body_End_Graft_Wedge001: THREE.Mesh
    Body_Sides001: THREE.Mesh
    Body_Sides_Arm_Bevel_Scalloped_Cutaway001: THREE.Mesh
  }
  materials: {
    ['F_bc54bbca534a4ee3a41821b2126680f3.020']: THREE.MeshPhysicalMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

const context = React.createContext({} as ContextType)

export function Instances({ children, ...props }: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/Sides_Collection-transformed.glb') as GLTFResult
  const instances = React.useMemo(
    () => ({
      BodyHeelBlock: nodes.Body_Heel_Block,
      BodyTailBlock: nodes.Body_Tail_Block,
      BodySidesArmBevelFlorentineCutaway: nodes.Body_Sides_Arm_Bevel_Florentine_Cutaway,
      BodySidesArmBevelVenetianCutaway: nodes.Body_Sides_Arm_Bevel_Venetian_Cutaway,
      BodySidesArmBevelScallopedCutaway: nodes.Body_Sides_Arm_Bevel_Scalloped_Cutaway,
      BodyLiningTop: nodes.Body_Lining_Top,
      BodyLiningBottom: nodes.Body_Lining_Bottom,
      BodyEndGraftWedge: nodes.Body_End_Graft_Wedge,
      BodySides: nodes.Body_Sides,
      BodySidesVenetianCutaway: nodes.Body_Sides_Venetian_Cutaway,
      BodySidesFlorentineCutaway: nodes.Body_Sides_Florentine_Cutaway,
      BodySidesScallopedCutaway: nodes.Body_Sides_Scalloped_Cutaway,
      BodySidesArmBevel: nodes.Body_Sides_Arm_Bevel,
      BodyHeelBlock1: nodes.Body_Heel_Block001,
      BodyTailBlock1: nodes.Body_Tail_Block001,
      BodyLiningTop1: nodes.Body_Lining_Top001,
      BodyLiningBottom1: nodes.Body_Lining_Bottom001,
      BodyEndGraftWedge1: nodes.Body_End_Graft_Wedge001,
      BodySides1: nodes.Body_Sides001,
      BodySidesArmBevelScallopedCutaway1: nodes.Body_Sides_Arm_Bevel_Scalloped_Cutaway001,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances: ContextType) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const instances = React.useContext(context)
  return (
    <group {...props} dispose={null}>
      <instances.BodyHeelBlock name="Body_Heel_Block" userData={{ name: 'Body_Heel_Block' }} />
      <instances.BodyTailBlock name="Body_Tail_Block" userData={{ name: 'Body_Tail_Block' }} />
      <instances.BodySidesArmBevelFlorentineCutaway name="Body_Sides_Arm_Bevel_Florentine_Cutaway" userData={{ name: 'Body_Sides_Arm_Bevel_Florentine_Cutaway' }} />
      <instances.BodySidesArmBevelVenetianCutaway name="Body_Sides_Arm_Bevel_Venetian_Cutaway" userData={{ name: 'Body_Sides_Arm_Bevel_Venetian_Cutaway' }} />
      <instances.BodySidesArmBevelScallopedCutaway name="Body_Sides_Arm_Bevel_Scalloped_Cutaway" userData={{ name: 'Body_Sides_Arm_Bevel_Scalloped_Cutaway' }} />
      <instances.BodyLiningTop name="Body_Lining_Top" userData={{ name: 'Body_Lining_Top' }} />
      <instances.BodyLiningBottom name="Body_Lining_Bottom" userData={{ name: 'Body_Lining_Bottom' }} />
      <instances.BodyEndGraftWedge name="Body_End_Graft_Wedge" userData={{ name: 'Body_End_Graft_Wedge' }} />
      <instances.BodySides name="Body_Sides" userData={{ name: 'Body_Sides' }} />
      <instances.BodySidesVenetianCutaway name="Body_Sides_Venetian_Cutaway" userData={{ name: 'Body_Sides_Venetian_Cutaway' }} />
      <instances.BodySidesFlorentineCutaway name="Body_Sides_Florentine_Cutaway" userData={{ name: 'Body_Sides_Florentine_Cutaway' }} />
      <instances.BodySidesScallopedCutaway name="Body_Sides_Scalloped_Cutaway" userData={{ name: 'Body_Sides_Scalloped_Cutaway' }} />
      <instances.BodySidesArmBevel name="Body_Sides_Arm_Bevel" userData={{ name: 'Body_Sides_Arm_Bevel' }} />
      <instances.BodyHeelBlock1 name="Body_Heel_Block001" userData={{ name: 'Body_Heel_Block.001' }} />
      <instances.BodyTailBlock1 name="Body_Tail_Block001" userData={{ name: 'Body_Tail_Block.001' }} />
      <instances.BodyLiningTop1 name="Body_Lining_Top001" userData={{ name: 'Body_Lining_Top.001' }} />
      <instances.BodyLiningBottom1 name="Body_Lining_Bottom001" userData={{ name: 'Body_Lining_Bottom.001' }} />
      <instances.BodyEndGraftWedge1 name="Body_End_Graft_Wedge001" userData={{ name: 'Body_End_Graft_Wedge.001' }} />
      <instances.BodySides1 name="Body_Sides001" userData={{ name: 'Body_Sides.001' }} />
      <instances.BodySidesArmBevelScallopedCutaway1 name="Body_Sides_Arm_Bevel_Scalloped_Cutaway001" userData={{ name: 'Body_Sides_Arm_Bevel_Scalloped_Cutaway.001' }} />
    </group>
  )
}

useGLTF.preload('/Sides_Collection-transformed.glb')
